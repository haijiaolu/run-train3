name: RUN MG

on:
  # push:
  #   branches:
  #     - main
  schedule:
    - cron: "1 1 * * 1"

jobs:
  process:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      SRC_NAME: db-src
      DATA_NAME1: db-out-da
      DATA_NAME2: db-out-we
      OUT_NAME: db-out-mg

    steps:
      - uses: actions/checkout@v4
      - name: Checkout src repo
        uses: actions/checkout@v4
        with:
          repository: haijiaolu/${{ env.SRC_NAME }}
          token: ${{ secrets.GH_TOKEN }}
          path: ${{ env.SRC_NAME }}
          fetch-depth: 1
          ref: ${{ github.ref }}

      - name: Checkout out repo
        uses: actions/checkout@v4
        with:
          repository: haijiaolu/${{ env.OUT_NAME }}
          token: ${{ secrets.GH_TOKEN }}
          path: ${{ env.OUT_NAME }}
          fetch-depth: 1
          ref: ${{ github.ref }}

      - name: Checkout data repo
        uses: actions/checkout@v4
        with:
          repository: haijiaolu/${{ env.DATA_NAME1 }}
          token: ${{ secrets.GH_TOKEN }}
          path: ${{ env.DATA_NAME1 }}
          fetch-depth: 1
          ref: ${{ github.ref }}
      - name: Checkout data repo
        uses: actions/checkout@v4
        with:
          repository: haijiaolu/${{ env.DATA_NAME2 }}
          token: ${{ secrets.GH_TOKEN }}
          path: ${{ env.DATA_NAME2 }}
          fetch-depth: 1
          ref: ${{ github.ref }}

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Set up committer
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - name: Run update
        # if: github.event.schedule == '0 20 * * 1'
        run: |
          pushd ${{ env.SRC_NAME }} && 
          bash scripts2/update-extract.sh ${{ env.OUT_NAME }} ${{ env.DATA_NAME1 }},${{ env.DATA_NAME2 }} &&
          popd

      - name: Commit and push
        run: bash push-repo.sh ${{ env.OUT_NAME }}
